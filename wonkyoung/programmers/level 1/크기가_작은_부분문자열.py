#230201
def solution(t, p):
    answer = 0
    len_t, len_p = len(t), len(p)
    for i in range(len_t - len_p + 1):
        print(i, t[i:i+len_p])
        if t[i:i+len_p] <= p:
            answer += 1
    return answer
'''
테스트 1 〉	통과 (0.19ms, 10.3MB)
테스트 2 〉	통과 (1.03ms, 10.4MB)
테스트 3 〉	통과 (0.98ms, 10.3MB)
테스트 4 〉	통과 (0.54ms, 10.1MB)
테스트 5 〉	통과 (0.19ms, 10.3MB)
테스트 6 〉	통과 (1.11ms, 10.4MB)
테스트 7 〉	통과 (1.19ms, 10.4MB)
테스트 8 〉	통과 (0.49ms, 10.2MB)
테스트 9 〉	통과 (0.11ms, 10.3MB)
테스트 10 〉	통과 (0.04ms, 10.2MB)
테스트 11 〉	통과 (0.57ms, 10.2MB)
테스트 12 〉	통과 (1.09ms, 10.2MB)
테스트 13 〉	통과 (0.71ms, 10.3MB)
테스트 14 〉	통과 (0.56ms, 10.2MB)
테스트 15 〉	통과 (0.63ms, 10.3MB)
테스트 16 〉	통과 (0.47ms, 10.2MB)
테스트 17 〉	통과 (0.80ms, 10.4MB)
테스트 18 〉	통과 (0.95ms, 10.2MB)
테스트 19 〉	통과 (0.39ms, 10.1MB)
테스트 20 〉	통과 (0.33ms, 10.3MB)
테스트 21 〉	통과 (0.01ms, 10.2MB)
테스트 22 〉	통과 (0.04ms, 10.2MB)
테스트 23 〉	통과 (0.13ms, 10.3MB)
테스트 24 〉	통과 (0.01ms, 10.2MB)
테스트 25 〉	통과 (0.02ms, 10.2MB)
테스트 26 〉	통과 (0.01ms, 10.2MB)
테스트 27 〉	통과 (0.01ms, 10.4MB)
테스트 28 〉	통과 (0.01ms, 10.2MB)
테스트 29 〉	통과 (0.02ms, 10.3MB)
테스트 30 〉	통과 (0.12ms, 10.2MB)
테스트 31 〉	통과 (0.00ms, 10.3MB)
테스트 32 〉	통과 (0.01ms, 10.2MB)
테스트 33 〉	통과 (0.01ms, 10.2MB)
테스트 34 〉	통과 (0.01ms, 10.1MB)
테스트 35 〉	통과 (0.01ms, 10.3MB)
테스트 36 〉	통과 (0.01ms, 10.2MB)
테스트 37 〉	통과 (0.01ms, 10.4MB)
테스트 38 〉	통과 (0.01ms, 10.2MB)
'''
def solution(t, p):
    answer = 0
    len_t, len_p = len(t), len(p)
    p = list(map(str, p))
    part_of = list(map(str, t[:len_p-1]))

    def is_smaller(target, ref):
        str_target, str_ref = ''.join(target), ''.join(ref)
        return str_target <= str_ref

    for i in range(len_t - len_p + 1):
        part_of.append(t[i+len_p-1])
        if is_smaller(part_of, p):
            answer += 1
        part_of.pop(0)
    return answer
'''
테스트 1 〉	통과 (0.88ms, 10.2MB)
테스트 2 〉	통과 (3.29ms, 10.4MB)
테스트 3 〉	통과 (2.92ms, 10.3MB)
테스트 4 〉	통과 (1.80ms, 10.3MB)
테스트 5 〉	통과 (0.90ms, 10.3MB)
테스트 6 〉	통과 (3.61ms, 10.2MB)
테스트 7 〉	통과 (4.40ms, 10.3MB)
테스트 8 〉	통과 (1.57ms, 10.2MB)
테스트 9 〉	통과 (0.48ms, 10.2MB)
테스트 10 〉	통과 (0.11ms, 10.3MB)
테스트 11 〉	통과 (2.07ms, 10.3MB)
테스트 12 〉	통과 (4.43ms, 10.2MB)
테스트 13 〉	통과 (2.99ms, 10.4MB)
테스트 14 〉	통과 (2.03ms, 10.4MB)
테스트 15 〉	통과 (2.22ms, 10.2MB)
테스트 16 〉	통과 (1.87ms, 10.2MB)
테스트 17 〉	통과 (3.38ms, 10.2MB)
테스트 18 〉	통과 (3.07ms, 10.2MB)
테스트 19 〉	통과 (1.16ms, 10.2MB)
테스트 20 〉	통과 (0.61ms, 10.2MB)
테스트 21 〉	통과 (0.03ms, 10.2MB)
테스트 22 〉	통과 (0.17ms, 10.3MB)
테스트 23 〉	통과 (0.55ms, 10.2MB)
테스트 24 〉	통과 (0.02ms, 10.2MB)
테스트 25 〉	통과 (0.05ms, 10.3MB)
테스트 26 〉	통과 (0.03ms, 10.3MB)
테스트 27 〉	통과 (0.06ms, 10.2MB)
테스트 28 〉	통과 (0.04ms, 10.2MB)
테스트 29 〉	통과 (0.05ms, 10.2MB)
테스트 30 〉	통과 (0.48ms, 10.2MB)
테스트 31 〉	통과 (0.01ms, 10.1MB)
테스트 32 〉	통과 (0.01ms, 10.2MB)
테스트 33 〉	통과 (0.02ms, 10.2MB)
테스트 34 〉	통과 (0.02ms, 10.2MB)
테스트 35 〉	통과 (0.02ms, 10.3MB)
테스트 36 〉	통과 (0.02ms, 10.2MB)
테스트 37 〉	통과 (0.02ms, 10.2MB)
테스트 38 〉	통과 (0.03ms, 10.2MB)
'''

def solution(t, p):
    from collections import deque
    answer = 0
    len_t, len_p = len(t), len(p)
    p = list(map(str, p))
    part_of = deque(map(str, t[:len_p-1]))

    def is_smaller(target, ref):
        str_target, str_ref = ''.join(target), ''.join(ref)
        return str_target <= str_ref

    for i in range(len_t - len_p + 1):
        part_of.append(t[i+len_p-1])
        if is_smaller(part_of, p):
            answer += 1
        part_of.popleft()
    return answer
'''
테스트 1 〉	통과 (1.12ms, 10.1MB)
테스트 2 〉	통과 (3.80ms, 10.3MB)
테스트 3 〉	통과 (3.28ms, 10.3MB)
테스트 4 〉	통과 (2.09ms, 10.4MB)
테스트 5 〉	통과 (1.06ms, 10.2MB)
테스트 6 〉	통과 (3.73ms, 10.3MB)
테스트 7 〉	통과 (5.41ms, 10.3MB)
테스트 8 〉	통과 (2.03ms, 10.3MB)
테스트 9 〉	통과 (0.63ms, 10.2MB)
테스트 10 〉	통과 (0.12ms, 10.2MB)
테스트 11 〉	통과 (2.50ms, 10.2MB)
테스트 12 〉	통과 (5.47ms, 10.2MB)
테스트 13 〉	통과 (3.87ms, 10.3MB)
테스트 14 〉	통과 (2.42ms, 10.4MB)
테스트 15 〉	통과 (2.52ms, 10.2MB)
테스트 16 〉	통과 (2.09ms, 10.4MB)
테스트 17 〉	통과 (3.92ms, 10.3MB)
테스트 18 〉	통과 (3.62ms, 10.3MB)
테스트 19 〉	통과 (1.37ms, 10.2MB)
테스트 20 〉	통과 (0.74ms, 10.3MB)
테스트 21 〉	통과 (0.03ms, 10.3MB)
테스트 22 〉	통과 (0.21ms, 10.3MB)
테스트 23 〉	통과 (0.71ms, 10.4MB)
테스트 24 〉	통과 (0.03ms, 10.2MB)
테스트 25 〉	통과 (0.06ms, 10.3MB)
테스트 26 〉	통과 (0.04ms, 10.2MB)
테스트 27 〉	통과 (0.04ms, 10.4MB)
테스트 28 〉	통과 (0.03ms, 10.4MB)
테스트 29 〉	통과 (0.06ms, 10.3MB)
테스트 30 〉	통과 (0.57ms, 10.3MB)
테스트 31 〉	통과 (0.01ms, 10.2MB)
테스트 32 〉	통과 (0.02ms, 10.2MB)
테스트 33 〉	통과 (0.02ms, 10.2MB)
테스트 34 〉	통과 (0.03ms, 10.4MB)
테스트 35 〉	통과 (0.03ms, 10.2MB)
테스트 36 〉	통과 (0.03ms, 10.3MB)
테스트 37 〉	통과 (0.02ms, 10.3MB)
테스트 38 〉	통과 (0.03ms, 10.2MB)
'''
def solution(t, p):
    answer = 0
    len_t, len_p = len(t), len(p)
    part_of = t[:len_p-1]

    for i in range(len_t - len_p + 1):
        part_of += t[i+len_p-1]
        if part_of <= p:
            answer += 1
        part_of = part_of[1:]
    return answer
'''
테스트 1 〉	통과 (0.29ms, 10.2MB)
테스트 2 〉	통과 (3.11ms, 10.2MB)
테스트 3 〉	통과 (1.32ms, 10.4MB)
테스트 4 〉	통과 (1.71ms, 10.4MB)
테스트 5 〉	통과 (0.29ms, 10.4MB)
테스트 6 〉	통과 (1.53ms, 10.2MB)
테스트 7 〉	통과 (1.83ms, 10.3MB)
테스트 8 〉	통과 (0.81ms, 10.4MB)
테스트 9 〉	통과 (0.18ms, 10.3MB)
테스트 10 〉	통과 (0.05ms, 10.2MB)
테스트 11 〉	통과 (1.13ms, 10.2MB)
테스트 12 〉	통과 (1.79ms, 10.3MB)
테스트 13 〉	통과 (1.15ms, 10.3MB)
테스트 14 〉	통과 (0.90ms, 10.4MB)
테스트 15 〉	통과 (0.96ms, 10.2MB)
테스트 16 〉	통과 (0.81ms, 10.2MB)
테스트 17 〉	통과 (1.52ms, 10.2MB)
테스트 18 〉	통과 (1.66ms, 10.2MB)
테스트 19 〉	통과 (0.53ms, 10.3MB)
테스트 20 〉	통과 (0.29ms, 10.2MB)
테스트 21 〉	통과 (0.01ms, 10.2MB)
테스트 22 〉	통과 (0.06ms, 10.4MB)
테스트 23 〉	통과 (0.20ms, 10.3MB)
테스트 24 〉	통과 (0.01ms, 10.3MB)
테스트 25 〉	통과 (0.03ms, 10.4MB)
테스트 26 〉	통과 (0.02ms, 10.3MB)
테스트 27 〉	통과 (0.03ms, 10.2MB)
테스트 28 〉	통과 (0.01ms, 10.2MB)
테스트 29 〉	통과 (0.02ms, 10.4MB)
테스트 30 〉	통과 (0.37ms, 10.3MB)
테스트 31 〉	통과 (0.00ms, 10.3MB)
테스트 32 〉	통과 (0.01ms, 10.2MB)
테스트 33 〉	통과 (0.01ms, 10.3MB)
테스트 34 〉	통과 (0.01ms, 10.4MB)
테스트 35 〉	통과 (0.01ms, 10.4MB)
테스트 36 〉	통과 (0.01ms, 10.3MB)
테스트 37 〉	통과 (0.01ms, 10.3MB)
테스트 38 〉	통과 (0.01ms, 10.4MB)
'''